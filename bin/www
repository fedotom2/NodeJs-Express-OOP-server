'use strict';

const server = require('../app');
const debug = require('debug')('express:server');
const http = require('http');

const normalizePort = (val) => {
  const port = parseInt(val, 10);

  if (isNaN(port)) 
    return val;

  if (port >= 0)
    return port;

  return false;
};

const port = normalizePort(process.env.PORT || 8000);
const app = new server.Server().app;
app.set('port', port)

const httpServer = http.createServer(app);

const onError = (error) => {
  if (error.syscall !== 'listen')
    throw error;

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
};

const onListening = () => {
  const addr = httpServer.address();
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  
  debug('Listening on ' + bind);
};

httpServer.listen(port);
httpServer.on('error', onError);
httpServer.on('listening', onListening);
